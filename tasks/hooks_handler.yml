---

# roles/backup-restic/tasks/hooks_handler.yml

- name: Register the list of all hooks
  ansible.builtin.set_fact:
    current_backup_hooks: "{{ current_backup.backup_pre_hooks | d([])
      + current_backup.backup_post_hooks | d([])
      + current_backup.restore_pre_hooks | d([])
      + current_backup.restore_post_hooks | d([])
    }}"
    current_backup_hooks_installed: []
    # lists that will be used in the rest of the role
    current_backup_pre_hooks: []
    current_backup_post_hooks: []
    current_backup_restore_pre_hooks: []
    current_backup_restore_post_hooks: []

- name: Fail if the hooks dict doesn't contain the expected keys
  ansible.builtin.assert:
    that:
      - current_hook.cmd | d([]) | length != 0
      - current_hook.type | d("") == ""
        or current_hook.type | d("") == "file"
        or current_hook.type | d("") == "template"
    fail_msg: |
      {{ current_hook.name | d('Hook number ' + current_hook_index | string) }} doesn't have a valid configuration
    success_msg: "{{ current_hook.name | d('Hook number ' + current_hook_index | string) }} has a valid configuration"
  loop: "{{ current_backup_hooks }}"
  loop_control:
    loop_var: current_hook
    index_var: current_hook_index

- name: Copy or template the hooks
  ansible.builtin.include_tasks: "hook.yml"
  loop: "{{ current_backup_hooks }}"
  loop_control:
    loop_var: current_hook
  when: current_hook.type | d("") == "file"
        or current_hook.type | d("") == "template"

# We need to prefix the templates and files with the path where they are
# copied by Ansible as the user should not need to be aware of the dest
- name: Patch the hooks lists
  ansible.builtin.include_tasks: "hooks_patcher.yml"
