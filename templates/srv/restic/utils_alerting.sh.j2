#!/usr/bin/env bash

{{ ansible_managed | comment }}

# Source helper functions
source {{ backup_restic_path }}/scripts/utils.sh

cri_sendmail()
{
    # Defaults
    local attachment=""
    local body="{{ backup_restic_mail_default_body }}"
    local dest="{{ backup_restic_mail_dest }}"
    local from="{{ backup_restic_mail_from }}"
    local subject="{{ backup_restic_mail_default_subject }}"

    # Options parsing
    ## Reset OPTIND
    OPTIND=1
    while getopts a:b:d:f:s: mail_option; do
        case "${mail_option}" in
            a) attachment="${OPTARG}";;
            b) body="${OPTARG}";;
            d) dest="${OPTARG}";;
            f) from="${OPTARG}";;
            s) subject="${OPTARG}";;
            *) echo "Unrecognized option"; exit 1;;
        esac
    done

    echoInfo "Sending alerting mail.."

    {% if backup_restic_mail_command == "mail" -%}
    if [ -n "${attachment}" ]; then
        # FIXME This is not a real attachment, here the file is used as the body
        # shellcheck disable=SC2086
        mail -aFrom:"$from" -s "${subject}" ${dest} < "${attachment}"
    else
        # shellcheck disable=SC2086
        mail -aFrom:"$from" -s "${subject}" ${dest} <<< "${body}"
    fi
    {# Default to sendmail #}
    {% else -%}
    if [ -n "${attachment}" ]; then
        # FIXME This is not a real attachment, here the file is used as the body
        # shellcheck disable=SC2086
        cat - ${attachment} <<EOF | {{ backup_restic_sendmail_path }} -t
To: ${dest}
From: ${from}
Subject: ${subject}

EOF
    else
        # shellcheck disable=SC2086
        cat - <<EOF | {{ backup_restic_sendmail_path }} -t
To: ${dest}
From: ${from}
Subject: ${subject}

${body}
EOF
    fi
    {% endif %}
}

cri_handle_alerting()
{
    local mail_tag="RESTIC"

    local operation_type="Restic"
    local operation_log_file=""
    local operation_rc="1"

    # Options parsing
    ## Reset OPTIND
    OPTIND=1
    while getopts l:r:t: alert_option; do
        case "${alert_option}" in
            l) operation_log_file="${OPTARG}";;
            r) operation_rc="${OPTARG}";;
            t) operation_type="${OPTARG}";;
            *) echo "Unrecognized option"; exit 1;;
        esac
    done

    local output_verb="failed"
    local operation_state="KO"
    if [ "$operation_rc" -eq "0" ]; then
        output_verb="finished"
        operation_state="OK"
    fi

    # Mail
    local mail_subject="[${mail_tag}][${operation_state}] ${operation_type} ${output_verb} on ${HOSTNAME}"
    if [[ -n "${operation_log_file}" && -f "${operation_log_file}" ]]; then
        cri_sendmail -s "${mail_subject}" -a "${operation_log_file}"
    else
        local mail_body="Operation failed with return code: ${operation_rc}. Please check the logs for more information."
        cri_sendmail -s "${mail_subject}" -b "${mail_body}"
    fi

    # TODO Add other type of alerting like Slack, etc
}
