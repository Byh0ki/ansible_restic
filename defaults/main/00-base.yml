---

# Paths for restic install
backup_srv_path: "/srv"
backup_restic_path: "{{ backup_srv_path }}/restic"

# Path for hooks outside of the role
# Can be anything, most likely a relative path like '../../my_shared_templates'
backup_restic_files_hooks_path: ""
backup_restic_templates_hooks_path: ""
# Next after the previous paths
backup_restic_hooks_path: ""

# Arch map
backup_restic_host_arch_map:
  aarch64: 'arm64'
  armv6l: 'arm'
  armv7l: 'arm'
  i386: '386'
  x86_64: 'amd64'

# Host arch
backup_restic_host_arch: "{{ backup_restic_host_arch_map[ansible_architecture] | default(ansible_architecture) }}"

# Bin management options
# NB: This will not work properly for older versions of this role as the restic binary name did not contain
# the `v` prefix. The ansible filter used (version_sort) is not able to sort the list of binaries if some of them
# are viewed as int and some of them are viewed as str (ex: 0.12 -> int and v0.13 -> str)
backup_restic_nb_bin_to_keep: 4

# Type of host
# This will be used for some types of desktop alerting
backup_restic_desktop_host: false

# Prune host
is_prune_host: false
backup_restic_prune_host: "prune.example.com"

# Hostname used for the backup, restic uses it to access snapshots, etc
# We need to define it here to ensure that the var will also be
# available for the prune host
backup_restic_hostname: "{{ inventory_hostname }}"

# Restic version
# valid values: every version available as a release on github
# renovate: repository="restic/restic"
backup_restic_version: "v0.17.3"

# Restic compression level, introduced in "0.14.0"
# Only available for restic repository v2 which is the default for 0.14.0 and onward but legacy repositories must be
# manually migrated using the procedure given in restic documentation
# (cf. https://restic.readthedocs.io/en/stable/045_working_with_repos.html#upgrading-the-repository-format-version)
# valid values: auto|max|off (cf. https://restic.readthedocs.io/en/stable/047_tuning_backup_parameters.html#compression)
backup_restic_default_compression_level: ""

## Restic repo integrity checks
### Used to determine how much data is checked after prune and backup.
### valid values:
###   - a number between 0 and 100 (with a '%' at the end) that will be the pourcentage of data to check
###   - a fraction that represent the portion to check (2/5 will check the second data portion)
###   - 'no-data-read' or 'simple' to perform a simple check on the repo (same as 0%)
###   - 'all-data' to perform full check on the repo (same as 100%)
###   - an empty vars mean no check
###
### Some of these values are not available for restic < 12
backup_restic_default_backup_data_integrity_check: "no-data-read"
backup_restic_default_prune_data_integrity_check: "25%"

## Prune
backup_restic_default_disable_prune: false
backup_restic_default_disable_external_prune: false
backup_restic_default_no_external_prune:
  - "local"
  - "sftp"
  - "rest"
  - "restic_rest"
backup_restic_default_forget_policy: "--keep-daily 7 --keep-weekly 8 --keep-monthly 12 --keep-yearly 2"

## Retry
backup_restic_default_max_attempts: 3
backup_restic_default_retry_interval: 600
backup_restic_default_prune_max_attempts: 3
backup_restic_default_prune_retry_interval: 600

## CPU load
backup_restic_default_cpu_load_check_enabled: false
backup_restic_default_prune_cpu_load_check_enabled: false
### Use nb of cores by default
backup_restic_default_cpu_load_threshold: "{{ ansible_processor_vcpus | d('') }}"
backup_restic_default_prune_cpu_load_threshold: ""

## Commands
## By default, use the functions defined in restic_wrapper
backup_restic_default_backup_cmd: "cri_backup"
backup_restic_default_prune_cmd: "cri_prune"

## Restore
backup_restic_default_restore_path: "/restore"

## Extra vars
backup_restic_default_extra_vars_export: true
backup_restic_default_extra_vars_prune_export: true

### Vars are being sourced in the retry_handler *and* the backup script
### valid values:
###   {name: my_var, value: my_value, export: true|false(optionnal)}
backup_restic_default_extra_vars: []
backup_restic_default_extra_vars_prune: []

# Backups definition
# List of dictionnaries defining the backups
backup_restic_list: []

# This list will allow the user to deploy only a subset of the backups
backup_restic_list_partial: []
